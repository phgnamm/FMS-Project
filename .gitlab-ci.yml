
image: docker:24.0.7

services:
  - docker:24.0.7-dind

stages:
  - build
  - deploy

before_script:
  - docker version
  - export $(grep -v '^#' .env | xargs)
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
   

build:
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
    
deploy_to_dockerhub:
  stage: deploy
  image: docker:latest
  script:
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $DOCKERHUB_REPO:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $DOCKERHUB_REPO:latest
    - docker push $DOCKERHUB_REPO:$CI_COMMIT_SHA  
    - docker push $DOCKERHUB_REPO:latest
  only:
    - deploy     

# ========================================================
# stages:
#   - build
#   - deploy

# variables:
#   AZURE_WEBAPP_NAME: "FMSNextBean"
#   AZURE_RESOURCE_GROUP: "FMS-Deploy"
#   AZURE_APP_SERVICE_PLAN: "ASP-FMSDeploy-bb7a"
#   AZURE_WEBAPP_PACKAGE_PATH: "API/publish"
#   SWASHBUCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION: "6.4.0"
#   DOTNET_CORE_VERSION: "8.0.x"
#   CONFIGURATION: "Release"
#   WORKING_DIRECTORY: "API"

# # Load environment variables from .env file
# before_script:
#   - export $(grep -v '^#' .env | xargs)

# # Build Stage
# build:
#   stage: build
#   image: mcr.microsoft.com/dotnet/sdk:8.0
#   script:
#     - dotnet restore $WORKING_DIRECTORY
#     - dotnet build $WORKING_DIRECTORY --configuration $CONFIGURATION --no-restore
#     - dotnet test $WORKING_DIRECTORY --no-build
#     - dotnet publish $WORKING_DIRECTORY --configuration $CONFIGURATION --no-build --output $AZURE_WEBAPP_PACKAGE_PATH
#     - dotnet tool install --global Swashbuckle.AspNetCore.Cli --version $SWASHBUCKLE_ASPNET_CORE_CLI_PACKAGE_VERSION
#     - swagger tofile --output "${WORKING_DIRECTORY}/${AZURE_WEBAPP_PACKAGE_PATH}/swagger.json" "${WORKING_DIRECTORY}/bin/Release/net8.0/API.dll" "v1"
#   artifacts:
#     paths:
#       - $AZURE_WEBAPP_PACKAGE_PATH

# # Deploy Stage
# deploy:
#   stage: deploy
#   image: mcr.microsoft.com/azure-cli:2.38.0
#   script:
#     - az login --service-principal --username "${AZURE_CLIENT_ID}" --password "${AZURE_CLIENT_SECRET}" --tenant "${AZURE_TENANT_ID}"
#     - az webapp config appsettings set --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_WEBAPP_NAME --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true
#     - zip -r $AZURE_WEBAPP_PACKAGE_PATH.zip $AZURE_WEBAPP_PACKAGE_PATH
#     - az webapp deployment source config-zip --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_WEBAPP_NAME --src $AZURE_WEBAPP_PACKAGE_PATH.zip
#     - az apim api import --path "/" --resource-group "$AZURE_RESOURCE_GROUP" --service-name "FMSNextBean" --api-id "FTravelAPI" --service-url "https://${AZURE_WEBAPP_NAME}.azurewebsites.net" --specification-path "${WORKING_DIRECTORY}/${AZURE_WEBAPP_PACKAGE_PATH}/swagger.json" --specification-format OpenApi --subscription-required false
#   only:
#     - deploy
#   environment:
#     name: production
#     url: https://${AZURE_WEBAPP_NAME}.azurewebsites.net

